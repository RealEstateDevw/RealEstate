from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, \
    InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, FSInputFile
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from sqlalchemy.exc import NoResultFound
from backend.database import SessionLocal
from backend.database.marketing.crud import DrawUserCRUD
from backend.database.models import UserLang

draw_router = Router()
crud = DrawUserCRUD()


class Registration(StatesGroup):
    lang = State()  # –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    name = State()  # –≤–≤–æ–¥ –∏–º–µ–Ω–∏
    surname = State()  # –≤–≤–æ–¥ —Ñ–∞–º–∏–ª–∏–∏
    phone = State()  # –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞


@draw_router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db = SessionLocal()
    try:
        existing = crud.get_exact_draw_user(db, message.from_user.id)
    except NoResultFound:
        existing = None
    finally:
        db.close()

    if existing:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞ –µ–≥–æ —è–∑—ã–∫–µ
        if existing.lang == UserLang.ru:
            kb = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–û –∂–∏–ª–æ–º –∫–æ–º–ø–ª–µ–∫—Å–µ", callback_data="about_complex")]]
            )
            await message.answer(
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã\n"
                "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –ñ–ö ¬´–†–∞—Å—Å–≤–µ—Ç¬ª. "
                "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–ø–ª–µ–∫—Å–µ, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π.",
                reply_markup=kb
            )
        else:
            kb = InlineKeyboardMarkup(inline_keyboard=[

                [InlineKeyboardButton(text="Majmua haqida", callback_data="about_complex")]]
            )
            await message.answer(
                "Assalomu alaykum! üëã\n"
                "Siz ‚ÄúRassvet‚Äù turar joy majmuasining rasmiy botidasiz. "
                "Bu yerda kompleks haqida batafsil ma'lumot olishingiz, planirovkalarni ko‚Äòrishingiz va Ochiq eshiklar kuniga ro‚Äòyxatdan o‚Äòtishingiz mumkin.",
                reply_markup=kb
            )
        return

    # –ò–Ω–∞—á–µ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–†—É—Å—Å–∫–∏–π"), KeyboardButton(text="O'zbekcha")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang:", reply_markup=kb)
    await state.set_state(Registration.lang)


@draw_router.message(Registration.lang)
async def process_lang(message: Message, state: FSMContext):
    text = message.text.strip().lower()
    if text == "—Ä—É—Å—Å–∫–∏–π":
        lang = UserLang.ru
    elif text in ("o'zbekcha", "uzbekcha"):
        lang = UserLang.uz
    else:
        return await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∫–Ω–æ–ø–∫–æ–π: –†—É—Å—Å–∫–∏–π –∏–ª–∏ O'zbekcha.")

    await state.update_data(lang=lang)

    if lang == UserLang.ru:
        intro = (
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã\n"
            "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –±–æ—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –ñ–ö ¬´–†–∞—Å—Å–≤–µ—Ç¬ª, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç—Å—è 15 –∏—é–Ω—è.\n\n"
            "–£ –≤–∞—Å –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å:\n"
            "üè° ‚Äî –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ç–æ–≤—ã–µ —à–æ—É—Ä—É–º—ã\n"
            "üéÅ ‚Äî –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã\n"
            "üöó ‚Äî –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è!\n\n"
            "–î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –≠—Ç–æ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ –º–∏–Ω—É—Ç—É!"
        )
        prompt = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"
    else:
        intro = (
            "Assalomu alaykum! üëã\n"
            "Siz \"Rassvet\" turar joy majmuasining Ochiq eshiklar kuni uchun rasmiy ro‚Äòyxatdan o‚Äòtish botidasiz. Tadbir 15-iyun kuni bo‚Äòlib o‚Äòtadi.\n\n"
            "Sizni quyidagilar kutmoqda:\n"
            "üè° ‚Äî Tayyor shourumlarni ko‚Äòrish\n"
            "üéÅ ‚Äî Kvartira xaridi uchun sovg‚Äòalar\n"
            "üöó ‚Äî Yangi avtomobil yutib olish imkoniyati!\n\n"
            "Keling, ro‚Äòyxatdan o‚Äòtamiz. Bu atigi bir daqiqa vaqt oladi."
        )
        prompt = "Iltimos, ismingizni kiriting:"

    await message.answer(intro, reply_markup=ReplyKeyboardRemove())
    await message.answer(prompt)
    await state.set_state(Registration.name)


@draw_router.message(Registration.name)
async def process_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text.strip())
    data = await state.get_data()
    reply = "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:" if data[
                                                           "lang"] == UserLang.ru else "Rahmat! Endi familiyangizni kiriting:"
    await message.answer(reply)
    await state.set_state(Registration.surname)


@draw_router.message(Registration.surname)
async def process_surname(message: Message, state: FSMContext):
    await state.update_data(surname=message.text.strip())
    data = await state.get_data()

    if data["lang"] == UserLang.ru:
        kb = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
        prompt = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"
    else:
        kb = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="Telefon raqamimni yuborish", request_contact=True)]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
        prompt = "Iltimos, telefon raqamingizni yuboring:"

    await message.answer(prompt, reply_markup=kb)
    await state.set_state(Registration.phone)


@draw_router.message(Registration.phone, F.contact)
async def process_phone(message: Message, state: FSMContext):
    data = await state.get_data()
    user_data = {
        "telegram_id": message.from_user.id,
        "first_name": data["name"],
        "last_name": data["surname"],
        "phone": message.contact.phone_number,
        "lang": data["lang"],
    }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    db = SessionLocal()
    try:
        crud.add_draw_user(db, **user_data)
    finally:
        db.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if data["lang"] == UserLang.ru:
        confirm = (
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –ñ–ö ¬´–†–∞—Å—Å–≤–µ—Ç¬ª.\n\n"
            "üìç –ê–¥—Ä–µ—Å: —É–ª. –ê–º–∏—Ä –¢–µ–º—É—Ä, 125, –≥. –ß–∏—Ä—á–∏–∫\n"
            "‚è∞ –ù–∞—á–∞–ª–æ: 15:00\n\n"
            "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –±–ª–∏–∂–µ –∫ –¥–∞—Ç–µ —Å–æ–±—ã—Ç–∏—è. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Ä–æ–¥–Ω—ã—Ö –∏ –¥—Ä—É–∑–µ–π ‚Äî –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!"
        )
    else:
        confirm = (
            "‚úÖ Rahmat! Siz 15-iyun kuni bo‚Äòlib o‚Äòtadigan \"Rassvet\" MJM ochiq eshiklar kuniga muvaffaqiyatli ro‚Äòyxatdan o‚Äòtdingiz.\n\n"
            "üìç Manzil: —É–ª. –ê–º–∏—Ä –¢–µ–º—É—Ä, 125, –≥. –ß–∏—Ä—á–∏–∫\n"
            "‚è∞ Boshlanish vaqti: 15:00\n\n"
            "Tadbir sanasiga yaqin biz siz bilan aloqaga chiqamiz. Oila a'zolaringiz va do‚Äòstlaringizni ham taklif qiling ‚Äî qiziqarli bo‚Äòladi!"
        )

    await message.answer(confirm, reply_markup=ReplyKeyboardRemove())
    await state.clear()


@draw_router.callback_query(F.data == "about_complex")
async def about_complex_handler(callback: CallbackQuery):
    await callback.answer()

    # –ë–µ—Ä—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    db = SessionLocal()
    try:
        user = crud.get_exact_draw_user(db, callback.from_user.id)
    finally:
        db.close()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
    if user.lang == UserLang.ru:
        caption = (
            "üèô –û –∂–∏–ª–æ–º –∫–æ–º–ø–ª–µ–∫—Å–µ ¬´–†–∞—Å—Å–≤–µ—Ç¬ª\n\n"
            "–ñ–ö ¬´–†–∞—Å—Å–≤–µ—Ç¬ª ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∂–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å –∫–ª–∞—Å—Å–∞ –ö–æ–º—Ñ–æ—Ä—Ç+, "
            "—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–π –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–æ–º —Ä–∞–π–æ–Ω–µ –≥–æ—Ä–æ–¥–∞ –ß–∏—Ä—á–∏–∫, —Ä—è–¥–æ–º —Å –û—Ä–º–æ–Ω –ü–∞—Ä–∫–æ–º.\n\n"
            "üìç –ê–¥—Ä–µ—Å: —É–ª. –ê–º–∏—Ä –¢–µ–º—É—Ä, 125, –≥. –ß–∏—Ä—á–∏–∫\n\n"
            "‚∏ª\n\n"
            "üîπ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n"
            "‚ñ™Ô∏è –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏: 1-, 2-, 3-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã\n"
            "‚ñ™Ô∏è –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è –æ—Ç 54 –¥–æ 107 –º¬≤\n"
            "‚ñ™Ô∏è –£–¥–æ–±–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è: —Ä—è–¥–æ–º —à–∫–æ–ª—ã, –¥–µ—Ç—Å–∞–¥—ã, –º–∞–≥–∞–∑–∏–Ω—ã, –∏–Ω—Å—Ç–∏—Ç—É—Ç, –±–æ–ª—å–Ω–∏—Ü–∞\n"
            "‚ñ™Ô∏è –ó–µ–ª—ë–Ω–∞—è –∏ —Ç–∏—Ö–∞—è –∑–æ–Ω–∞, —Ä—è–¥–æ–º –≠–∫–æ–ø–∞—Ä–∫"
        )
    else:
        caption = (
            "üèô ¬´Rassvet¬ª turar joy majmuasi haqida\n\n"
            "¬´Rassvet¬ª ‚Äî bu Komfort+ sinfidagi zamonaviy turar joy majmuasi bo‚Äòlib, "
            "Chirchik shahrining ekologik toza hududida, Ormon parkiga yaqin joylashgan.\n\n"
            "üìç Manzil: Amir Temur ko‚Äòchasi, 125, Chirchik shahr\n\n"
            "‚∏ª\n\n"
            "üîπ Afzalliklari:\n"
            "‚ñ™Ô∏è Zamonaviy rejalashtirishlar: 1-, 2-, 3-xonali kvartiralar\n"
            "‚ñ™Ô∏è Tijorat maydonlari: 54 dan 107 m¬≤ gacha\n"
            "‚ñ™Ô∏è Qulay infratuzilma: maktablar, bog‚Äòcha, do‚Äòkonlar, institut, shifoxona yaqinida\n"
            "‚ñ™Ô∏è Yashil va tinch zona, Ekopark yonida"
        )

    photo_path = "static/images/IMG_6956.JPG"
    await callback.message.answer_photo(photo=FSInputFile(photo_path), caption=caption)
